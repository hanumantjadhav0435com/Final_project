#include <DHT.h>               // DHT sensor library
#include <Wire.h>              // I2C for ADXL345
#include <ESP8266WiFi.h>       // ESP8266 WiFi library

// Sensor Pins
#define DHTPIN 4               // DHT11 Pin
#define HEARTBEAT_PIN A0       // Heart Rate Sensor Pin
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// ADXL345 Registers
#define ADXL345_ADDRESS 0x53
#define POWER_CTL 0x2D
#define DATAX0 0x32

void setup() {
  Serial.begin(115200);
  dht.begin();
  pinMode(HEARTBEAT_PIN, INPUT);
  Wire.begin();
  setupADXL345();
}

void loop() {
  // Read Temperature & Humidity from DHT11
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Read Heart Rate (Raw Sensor Value)
  int heartbeat_raw = analogRead(HEARTBEAT_PIN);
  int heartRate = map(heartbeat_raw, 0, 1023, 30, 120);  // Convert to BPM estimate

  // Read Accelerometer Data
  int16_t rawX, rawY, rawZ;
  readADXL345(rawX, rawY, rawZ);

  // Convert raw accelerometer data to g-force
  float accelX = rawX * 0.0039;  // Scale factor: Â±2g = 3.9 mg/LSB
  float accelY = rawY * 0.0039;
  float accelZ = rawZ * 0.0039;

  // Print values in required format
  Serial.print(temperature, 1); Serial.print(","); // 37.5
  Serial.print(heartRate); Serial.print(",");      // 45
  Serial.print(80); Serial.print(",");            // Fixed Heart Rate for now
  Serial.print(accelX, 2); Serial.print(",");     // 0.1
  Serial.print(accelY, 2); Serial.print(",");     // 0.2
  Serial.println(accelZ, 2);                      // 0.1

  delay(5000); // Update every 5 seconds
}

void setupADXL345() {
  Wire.beginTransmission(ADXL345_ADDRESS);
  Wire.write(POWER_CTL);
  Wire.write(0x08); // Set to Measure Mode
  Wire.endTransmission();
}

void readADXL345(int16_t &x, int16_t &y, int16_t &z) {
  Wire.beginTransmission(ADXL345_ADDRESS);
  Wire.write(DATAX0);
  Wire.endTransmission(false);
  Wire.requestFrom((uint8_t)ADXL345_ADDRESS, (size_t)6, (bool)true);

  x = (Wire.read() | (Wire.read() << 8));
  y = (Wire.read() | (Wire.read() << 8));
  z = (Wire.read() | (Wire.read() << 8));
}
